plugins {
    id 'java-library'
}

configurations {
    include
    pluginImpl
    implementation.extendsFrom(include)
    compileOnly.extendsFrom(pluginImpl)
}


repositories {
    mavenCentral()
    maven {
        name = "spigot-repo"
        url = "https://repo.rosewooddev.io/repository/public/"
    }
    maven {
        name = 'geysermc'
        url = "https://repo.opencollab.dev/main/"
    }
    maven {
        name = "ProtocolSupport"
        url = "https://repo.minebench.de/"
    }
    maven {
        url = 'https://repo.codemc.io/repository/nms/'
    }
    maven {
        name = "enginehub-maven" //worldedit
        url = "https://maven.enginehub.org/repo"
    }
    maven {
        name = "Jitpack"
        url = "https://jitpack.io/"
    }
    mavenLocal()
}

dependencies {
    testImplementation libs.junit.jupiter
    testRuntimeOnly libs.junit.platform
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-Xlint'
    options.compilerArgs << '-Xmaxerrs' << '10000'
    options.compilerArgs << '-Xmaxwarns' << '10000'
    options.compilerArgs << '-Xdiags:verbose'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(properties.getOrDefault("java_version", 8) as int)
compileJava.sourceCompatibility = compileJava.targetCompatibility = properties.getOrDefault("java_version", 8)


tasks.named('test') {
    useJUnitPlatform()
}

java {
    withSourcesJar()
}

jar {
    dependsOn(sourcesJar)
    dependsOn(processResources)

    enabled = true
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

tasks.withType(Tar).configureEach {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

tasks.withType(Zip).configureEach {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

tasks.withType(Jar).configureEach {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}